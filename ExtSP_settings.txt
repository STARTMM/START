Scenario.name = 6%%Group.movementModel%%_nodes_%%Group.nrofHosts%%_Speed_%%Group1.speed%%_%%Scenario.endTime%%_rng_%%btInterface.transmitRange%%
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 7200
#Scenario.endTime = 100

#################################################################################################

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 50

highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 50

#################################################################################################
# Define 6 different node groups
Scenario.nrofHostGroups = 1


# Common settings for all groups
Group.nrofHosts = 1000
Group.movementModel = ShortestPathMapBasedMovement
Group.router = EpidemicRouter
Group.bufferSize = 5M
Group.waitTime = 0, 10
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
Group.speed = 0.0,6.92
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300

# group1 (pedestrians) specific settings
Group1.groupID = sp
Group1.speed = 0,6.92
#################################################################################################
## Message creation parameters 
# How many event generators
Events.nrof = 0
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 1,10
# Message sizes (500kB - 1MB)
Events1.size = 50k,100k
# range of message source/destination addresses
Events1.hosts = 0,2
#Events1.tohosts = 2,3
# Message ID prefix
Events1.prefix = M

# Class of the first event generator
Events2.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
# Message sizes (500kB - 1MB)
# range of message source/destination addresses
Events1.tohosts = 2,3
# Message ID prefix




## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 24000,24000 
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 0

######################…Ë÷√µÿÕº#########################################
MapBasedMovement.nrofMapFiles = 1
#MapBasedMovement.mapFile1 = data/beigjing2.wkt
MapBasedMovement.mapFile1 = data/Map2009_newOrigin.wkt

#################################################################################################

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 4
# length of the warm up period (simulated seconds)
Report.warmup = 0

# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load


Report.report1 = ContactTimesReport
Report.report2 = InterContactTimesReport
Report.report3 = TotalContactTimeReport
#Report.report1 = MovementTraceReport
Report.report4 = MovementTraceReport
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 0
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 100
Optimization.randomizeUpdateOrder = true


#################################################################################################

## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
